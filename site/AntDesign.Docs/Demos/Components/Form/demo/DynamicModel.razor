@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel

<Form Model="@model"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      LabelColSpan="8"
      WrapperColSpan="16">

    @foreach (var field in fields)
    {
        <FormItem Name="@field.Key">
            @typedInput[field.Value]
        </FormItem>
    }

    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit">
            Submit
        </Button>
    </FormItem>
</Form>

@code
{
    private Dictionary<string, Type> fields = new();
    private Model model = new();

    protected override void OnInitialized()
    {
        fields = typeof(Model).GetProperties().ToDictionary(x => x.Name, x => x.PropertyType);
        base.OnInitialized();
    }

    public class Model
    {
        [Required, DisplayName("User Name")]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
        public bool RememberMe { get; set; } = true;
    }

    private Dictionary<Type,RenderFragment> typedInput => new()
    {
        [typeof(string)]= @<Input TValue="string" />,
        [typeof(bool)] = @<Checkbox />,
    };

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(model)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

    
}